<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lq.repository.SysRoleUserRepository">
    <resultMap id="BaseResultMap" type="com.lq.entity.SysRoleUser">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="role_id" jdbcType="INTEGER" property="roleId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="operator" jdbcType="VARCHAR" property="operator"/>
        <result column="operate_time" jdbcType="TIMESTAMP" property="operateTime"/>
        <result column="operate_ip" jdbcType="VARCHAR" property="operateIp"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, role_id, user_id, operator, operate_time, operate_ip
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_role_user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_role_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.lq.entity.SysRoleUser">
    insert into sys_role_user (id, role_id, user_id, 
      operator, operate_time, operate_ip
      )
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{operator,jdbcType=VARCHAR}, #{operateTime,jdbcType=TIMESTAMP}, #{operateIp,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.lq.entity.SysRoleUser">
        insert into sys_role_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="operator != null">
                operator,
            </if>
            <if test="operateTime != null">
                operate_time,
            </if>
            <if test="operateIp != null">
                operate_ip,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="operator != null">
                #{operator,jdbcType=VARCHAR},
            </if>
            <if test="operateTime != null">
                #{operateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="operateIp != null">
                #{operateIp,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.lq.entity.SysRoleUser">
        update sys_role_user
        <set>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="operator != null">
                operator = #{operator,jdbcType=VARCHAR},
            </if>
            <if test="operateTime != null">
                operate_time = #{operateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="operateIp != null">
                operate_ip = #{operateIp,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lq.entity.SysRoleUser">
    update sys_role_user
    set role_id = #{roleId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      operator = #{operator,jdbcType=VARCHAR},
      operate_time = #{operateTime,jdbcType=TIMESTAMP},
      operate_ip = #{operateIp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectCount" parameterType="com.lq.entity.SysRoleUser" resultType="java.lang.Integer">
        select count(*) from sys_role_user
        <where>
            <if test="id != null">
                and id = #{id,jdbcType=INTEGER}
            </if>
            <if test="roleId != null">
                and role_id = #{roleId,jdbcType=INTEGER}
            </if>
            <if test="userId != null">
                and user_id = #{userId,jdbcType=INTEGER}
            </if>
            <if test="operator != null">
                and operator = #{operator,jdbcType=VARCHAR}
            </if>
            <if test="operateTime != null">
                and operate_time = #{operateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="operateIp != null">
                and operate_ip = #{operateIp,jdbcType=VARCHAR}
            </if>
        </where>
    </select>
    <select id="selectPage" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_role_user where 1 = 1
        <if test="param1.id != null">
            and id = #{param1.id,jdbcType=INTEGER}
        </if>
        <if test="param1.roleId != null">
            and role_id = #{param1.roleId,jdbcType=INTEGER}
        </if>
        <if test="param1.userId != null">
            and user_id = #{param1.userId,jdbcType=INTEGER}
        </if>
        <if test="param1.operator != null">
            and operator = #{param1.operator,jdbcType=VARCHAR}
        </if>
        <if test="param1.operateTime != null">
            and operate_time = #{param1.operateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="param1.operateIp != null">
            and operate_ip = #{param1.operateIp,jdbcType=VARCHAR}
        </if>
        <if test="param2 !=null and  param2.sort != null">
            order by
            <foreach collection="param2.sort" item="order" separator=",">
                ${order.property} ${order.direction}
            </foreach>
        </if>
        <if test=" param2 !=null and param2.offset >= 0 and param2.pageSize > 0">
            limit ${param2.offset}, ${param2.pageSize}
        </if>
    </select>

    <select id="getRoleIDListByUserId" resultType="int">
    SELECT  role_id from  sys_role_user
    where user_id=#{userId}

  </select>

    <delete id="deleteByRoleId">
        DELETE  from sys_role_user
        where role_id=#{roleId}
    </delete>

    <insert id="batchInsert" parameterType="map">
        insert into sys_role_user ( role_id, user_id,
        operator, operate_time, operate_ip
        )
        values
        <foreach collection="roleUserList" separator="," item="roleUser">
            (#{roleUser.roleId,jdbcType=INTEGER}, #{roleUser.userId,jdbcType=INTEGER},
            #{roleUser.operator,jdbcType=VARCHAR}, #{roleUser.operateTime,jdbcType=TIMESTAMP},
            #{roleUser.operateIp,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>
</mapper>